<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">

<!-- 공연장리스트 정보가져오기 -->
	<select id="getConcertHallList" parameterType="Criteria" resultType="ConcertHallVO">
		
		<![CDATA[
		
		SELECT
		        CONCERT_HALL_SQ AS concertHallSq,
		        CONCERT_HALL_NAME AS concertHallName,
		        CONCERT_HALL_BASIC_ADDR AS concertHallRoadAddr
		FROM (
		        SELECT 
		        ROWNUM as rn,
		                    CONCERT_HALL_SQ,
		                    CONCERT_HALL_NAME,
		                    CONCERT_HALL_BASIC_ADDR
		        FROM (
		                SELECT
		                        CONCERT_HALL_SQ,
		                        CONCERT_HALL_NAME,
		                        CONCERT_HALL_BASIC_ADDR
		                FROM 
		                        concert_hall
		]]>
		
		<if test="keyword2 != null and keyword2 != ''">
            	WHERE 
                		CONCERT_HALL_NAME like '%'||#{keyword2}||'%' OR CONCERT_HALL_BASIC_ADDR like '%'||#{keyword2}||'%'
    	</if>
		
		
		<![CDATA[		
						   WHERE
                  				concert_hall_stat = 'Y'                    
		                ORDER BY 
		                        CONCERT_HALL_SQ DESC
		            ) t
		)
		WHERE 
		    rn 
		    BETWEEN ((#{pageNum} -1) * #{amount} + 1) AND #{pageNum} * #{amount}
		
		]]>

	</select>

<!-- 공연리스트 정보가져오기 -->
	<select id="adminShowList" parameterType="Criteria" resultType="ShowVO">
		
		<![CDATA[

		    SELECT
					show_sq AS showSq,
					main_image AS mainImage,
					sub_image AS subImage,
					TO_CHAR(start_date, 'YYYY.MM.DD') AS startDate,
					TO_CHAR(end_date, 'YYYY.MM.DD') AS endDate,
					TO_CHAR(reservation_date, 'YYYY.MM.DD') AS reservationDate,
					show_name AS showName,
					cast,
					director,
					show_time AS showTime,
					viewing_age AS viewingAge,					
					category,
					show_stat AS showStat,
					concert_hall_sq AS concertHallSq
			FROM (
					SELECT 
							ROWNUM as rn,
							show_sq,
							main_image,
							sub_image,
							start_date,
							end_date,
							reservation_date,
							show_name,
							cast,
							director,
							show_time,
							viewing_age,							
							category,
							show_stat,
							concert_hall_sq
					FROM (
							SELECT 
									show_sq,
									main_image,
									sub_image,
									start_date,
									end_date,
									reservation_date,
									show_name,
									cast,
									director,
									show_time,
									viewing_age,									
									category,
									show_stat,
									concert_hall_sq
							FROM 
									show
							WHERE 
									category = 1
		]]>
		<if test='showStat == 0'>
				            AND			           
									show_stat != 1
		</if>
		<if test='showStat != 0'>
				            AND			           
									show_stat = #{showStat}
		</if>
		
		<![CDATA[
							ORDER BY 
									show_Sq DESC
					) t
				)
			WHERE 
					rn BETWEEN ((#{pageNum} -1) * #{amount} + 1) AND #{pageNum} * #{amount}
		
		]]>

	</select>
<!-- 공연정보가져오기 -->
	<select id="getShow" parameterType="int" resultType="ShowVO">
		
		<![CDATA[

		      SELECT
				    show_sq           AS showsq,
				    main_image        AS mainimage,
				    sub_image         AS subimage,
				    TO_CHAR(start_date, 'YYYY.MM.DD') AS startdate,
				    TO_CHAR(end_date, 'YYYY.MM.DD') AS enddate,
				    TO_CHAR(reservation_date, 'YYYY.MM.DD') AS reservationdate,
				    show_name         AS showname,
				    CASE
				        WHEN length(cast) <= 30 THEN cast
				        ELSE substr(cast, 1, 27)
				             || '...'
				    END AS cast,
				    director,
				    show_time         AS showtime,
				    viewing_age       AS viewingage,
				    b.category_name   AS categoryname,
				    category,
				    show_stat         AS showstat,
				    concert_hall_sq   AS concerthallsq,
				    (
			        SELECT
			            round(AVG(a.grade), 2)
			        FROM
			            review a
			            JOIN show b ON a.show_sq = b.show_sq
			        WHERE
			            a.show_sq = #{showSq}
			        GROUP BY
			            a.show_sq
			    	) AS gradeavg
				FROM
				    show a
				    INNER JOIN category b ON a.category = b.category_sq
			   WHERE 
			        show_sq = #{showSq}			
		
		]]>

	</select>
<!-- 회차정보가져오기 -->
	<select id="getShowing" parameterType="ShowingVO" resultType="ShowingVO">
		
		<![CDATA[
		      SELECT 
			      	w.showing_sq         AS showingsq,
				    TO_CHAR(w.showing_date, 'YYYY-MM-DD') AS showingdate,
				    TO_CHAR(w.start_time, 'HH24:MI') AS starttime,
				    TO_CHAR(w.end_time, 'HH24:MI') AS endtime,
				    w.show_sq            AS showsq,
                    s.show_name            AS showname,
				    w.show_information   AS showinformation,
				    w.showing_stat       AS showingstat
				FROM 
					showing w, show s
				where 
					w.show_sq = s.show_sq and s.show_sq = #{showSq}
			     AND 
			        to_char(w.showing_date, 'YYYY-MM-DD') = #{showingDate}
			ORDER BY 
			   		w.start_time
		]]>
	</select>

<!-- 회차등록 -->
	<insert id="insertShowing" parameterType="ShowingVO">

		<selectKey keyProperty="showingSq" resultType="int"
			order="BEFORE">
			SELECT seq_showing_sq.NEXTVAL AS showingSq FROM dual
		</selectKey>
		
		<![CDATA[
		
		INSERT INTO showing (
                    showing_sq,
                    showing_date,
                    start_time,
                    end_time,
                    showing_stat,
                    show_sq,
                    show_information)
            values (
            		#{showingSq},
                    TO_DATE(#{showingDate}, 'YYYY-MM-DD'),
                    TO_DATE(#{startTime}, 'YYYY-MM-DD-HH24:MI'),
                    TO_DATE(#{endTime}, 'YYYY-MM-DD-HH24:MI'),
                    'Y',
                    #{showSq},
                    '회차등록'
            		)  		
		]]>

	</insert>
	
	<!-- 공연회차삭제 -->
	<delete id="deleteShowing" parameterType="int">
	
		<![CDATA[
		
			DELETE FROM showing WHERE showing_sq = #{showingSq}
				    
		]]>
		
	</delete>

	<!-- 월별 공연일정 가져오기 -->
	<select id="getShowingDay" parameterType="int" resultType="String">
	
		<![CDATA[
		
			SELECT 
				TO_CHAR(showing_date, 'YYYY-MM-DD') AS showing_date     
			FROM
				showing
			WHERE
				show_sq = #{showSq}
			GROUP BY 
				showing_date
				    
		]]>
		
	</select>
	
	<!-- 공연 상태변경 -->
	<update id="showUpdateStat" parameterType="ShowVO">
	
		<![CDATA[
		
			UPDATE show
            SET
                show_stat = #{showStat}
			WHERE
				show_sq = #{showSq}
		
			
		]]>
	
	</update>
	
	<!-- 상태별 공연갯수 가져오기 -->
	<select id="getShowTotal" parameterType="String" resultType="int">
		<![CDATA[

			SELECT COUNT(*) 
			FROM 
				show
			WHERE
				category = 1
			
		]]>
		<if test='showStat == 0'>
				            AND			           
									show_stat != 1
		</if>
		
		<if test='showStat != 0'>
				            AND			           
									show_stat = #{showStat}
		</if>
		
		
	</select>

	<!-- 공연장수 검색 후 가져오기 -->
	<select id="getConcertHallTotal" parameterType="Criteria" resultType="int">
		<![CDATA[

			SELECT COUNT(*) 
			FROM 
				concert_hall
		   WHERE
                concert_hall_stat = 'Y'	
				
		]]>
		<if test="keyword2 != null and keyword2 != ''">
		                WHERE 
		                        CONCERT_HALL_NAME like '%'||#{keyword2}||'%' OR CONCERT_HALL_BASIC_ADDR like '%'||#{keyword2}||'%'
		</if>
	</select>
	
	<!-- 양도리스트수 가져오기 -->
	<select id="getTransferTotal" resultType="int" parameterType="Criteria">
		<![CDATA[

			SELECT COUNT(*) 
			FROM 
				transfer_board
			WHERE
				1 = 1		
		]]>

		<if test='keyword2 != "A"'>
	
	
           	AND
			        transfer_stat = #{keyword2}
		</if>
    	
	</select>
	
	<!-- 예매리스트(회원기준)수 가져오기 -->
	<select id="getUserTicketingTotal" resultType="int">
		<![CDATA[

			SELECT
				COUNT(ticketing_sq)
			FROM
				ticketing		
		]]>
    	
	</select>
	
	<!-- 공연장이름 가져오기 -->
	<select id="getTicketingDetailHallName" parameterType="ShowVO" resultType="ConcertHallVO">
		<![CDATA[
			SELECT
					concert_hall_name as concertHallName
			FROM 
					concert_hall c, show s
			WHERE
					s.show_sq = #{showSq} and c.concert_hall_sq = #{concertHallSq}
		]]>
	</select>
	
	<!-- 양도리스트 가져오기 -->
	<select id="getTransferList" parameterType="Criteria" resultType="TransferBoardVO">
		<![CDATA[
			SELECT
			        showName,
			        sellUser,
			        buyUser,
			        ticketSeatPrice,
			        hopePrice,
			        ticketSeat,
			        transferDate,
			        startTime,
			        transferStat
			FROM
			    (SELECT 
			        ROWNUM as rn,
			                showName,
			                sellUser,
			                buyUser,
			                ticketSeatPrice,
			                hopePrice,
			                ticketSeat,
			                transferDate,
			                startTime,
        					transferStat
			            
			    FROM
			                (SELECT DISTINCT
				                        a.transfer_board_Sq,
				                        d.show_name AS showName,
				                        g.user_id AS sellUser,
				                        h.user_id AS buyUser,
				                        b.ticket_seat_price AS ticketSeatPrice,
				                        a.hope_price AS hopePrice,
				                        b.ticket_seat AS ticketSeat,
				                        TO_CHAR(a.transfer_date, 'YYYY-MM-DD') AS transferDate,
				                        TO_CHAR(c.start_time, 'YYYY-MM-DD') AS startTime,
				                        CASE 
				                            WHEN a.transfer_stat = 'N' THEN '거래완료'
				                            WHEN a.transfer_stat = 'Y' THEN '거래중'
				                        END AS transferStat
				                FROM 
				                        transfer_board a
				                INNER JOIN
				                        ticket b ON b.ticket_sq = a.ticket_sq
				                INNER JOIN
				                        showing c ON c.showing_sq = b.showing_sq 
				                INNER JOIN
				                        show d ON d.show_sq = c.show_sq
				                INNER JOIN
				                        users g ON a.sell_user_sq = g.user_sq
				                LEFT JOIN
				                        users h ON a.buy_user_sq = h.user_sq
				                WHERE
										1 = 1

		]]>
		<if test='keyword2 != "A"'>
				            	AND
					        			a.transfer_stat = #{keyword2}
		</if>

		
		
		<![CDATA[
				                        
				                        
				                
				                ORDER BY 
										a.transfer_board_Sq DESC
			                ) 
			            )
			WHERE 
			    rn BETWEEN ((#{pageNum} -1) * #{amount} + 1) AND #{pageNum} * #{amount}
		]]>
	</select>
	
	<!-- 회원별 예매리스트 가져오기 -->
	<select id="getUserTicketingList" parameterType="Criteria" resultType="UserTicketingVO">
		<![CDATA[
			SELECT
				    userid,
				    username,
				    gender,
				    showname,
				    totalprice,
				    ticketseat,
				    showingdate,
				    concerthallname
			FROM
				    (
				        SELECT
					            ROWNUM AS rn,
					            userid,
					            username,
					            gender,
					            showname,
					            totalprice,
					            ticketseat,
					            showingdate,
					            concerthallname
				        FROM
				            (
				                SELECT
					                    a.ticketing_date,
					                    c.user_id                             AS userId,
					                    c.user_name                           AS userName,
					                    CASE 
				                            WHEN c.gender = 'M' THEN '남성'
				                            WHEN c.gender = 'F' THEN '여성'
				                        END AS gender,
					                    e.show_name                           AS showName,
					                    SUM(b.ticket_seat_price)              AS totalPrice,
					                    CASE 
					                        WHEN LENGTH(SUBSTR(LISTAGG(b.ticket_seat, ',') WITHIN GROUP (ORDER BY b.ticket_seat), 1, 6)) > 5
					                        THEN CONCAT(SUBSTR(LISTAGG(b.ticket_seat, ',') WITHIN GROUP (ORDER BY b.ticket_seat), 1, 6), '...')
					                        ELSE SUBSTR(LISTAGG(b.ticket_seat, ',') WITHIN GROUP (ORDER BY b.ticket_seat), 1, 5)
					                    END AS ticketSeat,
					                    to_char(d.showing_date, 'YYYY-MM-DD') AS showingDate,
					                    f.concert_hall_name                   AS concertHallName
				                FROM
				                        ticketing a
					                    JOIN ticket       b ON a.ticketing_sq = b.ticketing_sq
					                    INNER JOIN users        c ON a.user_sq = c.user_sq
					                    INNER JOIN showing      d ON b.showing_sq = d.showing_sq
					                    INNER JOIN show         e ON e.show_sq = d.show_sq
					                    INNER JOIN concert_hall f ON f.concert_hall_sq = e.concert_hall_sq
				                WHERE
				                    	b.ticket_active <> 'N'
				                GROUP BY
					                    a.ticketing_date,
					                    f.concert_hall_name,
					                    e.show_name,
					                    d.showing_date,
					                    c.gender,
					                    c.user_name,
					                    c.user_id
				                ORDER BY
				                    	a.ticketing_date DESC
				            )
				    )
				WHERE 
				    rn BETWEEN ((#{pageNum} -1) * #{amount} + 1) AND #{pageNum} * #{amount}
		]]>
	</select>
	
	
	<!-- 종료된 회차 시퀀스 가져오기 리스트로 -->
	<select id="getEndShowingSq" resultType="ShowingVO">
		
		<![CDATA[
		
				SELECT
				      showing_sq   AS showingsq
				  FROM
				      showing
				 WHERE
				      end_time < SYSDATE
				   AND 
				      showing_stat ='Y'
		      ORDER BY
				      showing_sq
			    
	    ]]>
	
	</select>
	
	<!-- 회차 종료시 -->
	<update id="endShowing">
		
		<![CDATA[
	
			UPDATE 
			      showing
			   SET
			      showing_stat = 'N'
		  	 WHERE
			      end_time < SYSDATE
			   AND 
			      showing_stat='Y'
	
		]]>
	</update>
	
	<!-- 종료된 회차 시퀀스로 티켓 상태변경 -->
	<update id="endTicket" parameterType="int">
		
		<![CDATA[
	
			UPDATE 
			      ticket
			   SET
				  ticket_stat = 2
		     WHERE 
		          showing_sq = #{showingSq}
	
		]]>
	</update>
		
</mapper>